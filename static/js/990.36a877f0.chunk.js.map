{"version":3,"file":"static/js/990.36a877f0.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Section/Section.jsx","pages/Contacts.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contactSlice';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { styled } from '@mui/material/styles';\nimport Container from '@mui/material/Container';\nimport Notiflix from 'notiflix';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isExist = contacts.some(contact => contact.name === name);\n\n    if (isExist) {\n      Notiflix.Notify.info(`${name} is already in contacts.`);\n    } else {\n      dispatch(addContact({ name, number }));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n    } else {\n      setNumber(value);\n    }\n  };\n\n  const SubmitButton = styled(Button)({\n    margin: '1rem 0 0',\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: '3px',\n    border: 0,\n    color: 'white',\n    height: '48px',\n    padding: '0 30px',\n    width: '180px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  });\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            '& > :not(style)': { m: 2 },\n          }}\n        >\n          <TextField\n            fullWidth\n            required\n            id=\"outlined-basic\"\n            label=\"Name\"\n            variant=\"outlined\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n          />\n          <TextField\n            fullWidth\n            required\n            id=\"outlined-basic\"\n            label=\"Phone\"\n            variant=\"outlined\"\n            name=\"phone\"\n            value={number}\n            onChange={handleChange}\n          />\n          <SubmitButton type=\"submit\">Add contact</SubmitButton>\n        </Box>\n      </form>\n    </Container>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contactSlice';\nimport { styled } from '@mui/material/styles';\nimport Button from '@mui/material/Button';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\nimport ListItemText from '@mui/material/ListItemText';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const ColorButton = styled(Button)({\n    color: '#FE6B8B',\n    outline: '#FE6B8B',\n    borderColor: '#FE6B8B',\n    '&:hover': {\n      borderColor: '#FE6B8B',\n      boxShadow: '4px 8px 19px -3px rgba(0,0,0,0.27)',\n    },\n  });\n\n  return (\n    <ListItem alignItems=\"flex-start\">\n      <ListItemAvatar>\n        <AccountCircle />\n      </ListItemAvatar>\n      <ListItemText primary={name} secondary={number} />\n      <ColorButton\n        variant=\"outlined\"\n        startIcon={<DeleteIcon />}\n        onClick={() => handleDelete(id)}\n      >\n        Delete\n      </ColorButton>\n    </ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default ContactItem;\n","import ContactItem from './ContactItem';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contactSlice';\nimport List from '@mui/material/List';\nimport { Container } from '@mui/material';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => state.contacts.contacts.items);\n  const filter = useSelector(state => state.contacts.filter);\n\n  const filteredContacts = contacts.filter(\n    contact => contact.name && contact.name.toLowerCase().includes(filter)\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <List sx={{ width: '100%', maxWidth: 400 }}>\n        {filteredContacts.map(contact => (\n          <ContactItem\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          />\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { setContactsFilter } from 'redux/contactSlice';\nimport TextField from '@mui/material/TextField';\nimport Container from '@mui/material/Container';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const handleFilter = event => {\n    dispatch(setContactsFilter(event.target.value.toLowerCase()));\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <TextField\n        fullWidth\n        id=\"input-with-icon-textfield\"\n        label=\"Find contacts by name\"\n        variant=\"standard\"\n        onChange={handleFilter}\n        size=\"large\"\n      />\n    </Container>\n  );\n};\n\nexport default Filter;\n","import propTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: propTypes.string,\n  children: propTypes.any,\n};\n\nexport default Section;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["dispatch","useDispatch","contacts","useSelector","state","items","useState","name","setName","number","setNumber","handleChange","e","target","value","SubmitButton","styled","Button","margin","background","borderRadius","border","color","height","padding","width","boxShadow","Container","component","maxWidth","onSubmit","preventDefault","some","contact","Notiflix","addContact","Box","sx","display","flexDirection","alignItems","m","TextField","fullWidth","required","id","label","variant","onChange","type","ColorButton","outline","borderColor","ListItem","ListItemAvatar","AccountCircle","ListItemText","primary","secondary","startIcon","Delete","onClick","deleteContact","handleDelete","filter","filteredContacts","toLowerCase","includes","useEffect","fetchContacts","List","map","event","setContactsFilter","size","title","children"],"sourceRoot":""}